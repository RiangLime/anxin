<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.lime.anxin.mapper.DistributeApplicationMapper">

    <resultMap id="BaseResultMap" type="cn.lime.anxin.model.entity.DistributeApplication">
            <id property="id" column="id" jdbcType="BIGINT"/>
            <result property="userId" column="user_id" jdbcType="BIGINT"/>
            <result property="realName" column="real_name" jdbcType="VARCHAR"/>
            <result property="phone" column="phone" jdbcType="VARCHAR"/>
            <result property="region" column="region" jdbcType="VARCHAR"/>
            <result property="reason" column="reason" jdbcType="VARCHAR"/>
            <result property="state" column="state" jdbcType="TINYINT"/>
            <result property="approveTime" column="approve_time" jdbcType="BIGINT"/>
            <result property="gmtCreated" column="gmt_created" jdbcType="TIMESTAMP"/>
    </resultMap>
    <resultMap id="pageVo" type="cn.lime.anxin.model.vo.distribute.ApplicationPageVo">
        <id property="id" column="apply_id" jdbcType="BIGINT"/>
        <result property="userId" column="da_user_id" jdbcType="BIGINT"/>
        <result property="realName" column="da_real_name" jdbcType="VARCHAR"/>
        <result property="phone" column="da_phone" jdbcType="VARCHAR"/>
        <result property="region" column="da_region" jdbcType="VARCHAR"/>
        <result property="reason" column="da_reason" jdbcType="VARCHAR"/>
        <result property="state" column="da_state" jdbcType="INTEGER"/>
        <result property="approveTime" column="da_approve_time" jdbcType="BIGINT"/>
        <result property="remark" column="da_remark" jdbcType="VARCHAR"/>
        <result property="applyTime" column="da_apply_time" jdbcType="BIGINT"/>
        <association property="userVo" resultMap="cn.lime.core.mapper.UserMapper.userVo"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,user_id,real_name,
        phone,region,reason,
        state,approve_time,gmt_created
    </sql>
    <select id="pageApplys" resultMap="pageVo">
        with users as (
            select
                u.user_id,
                u.account,
                u.name,
                u.avatar,
                u.phone,
                u.role,
                u.email,
                u.sex,
                UNIX_TIMESTAMP(u.birthday) as birthday,
                u.birthplace,
                u.status
                    ,
                UNIX_TIMESTAMP(u.gmt_created) as gmt_created,
                MAX(ll.login_time) AS last_login_time
            from
                User u
                    left join Login_Log ll on
                    ll.user_id = u.user_id
            group by
                u.user_id,
                u.name,
                u.account,
                u.phone,
                u.gmt_created,
                u.status)
        SELECT
            users.*,
            da.user_id as da_user_id,
            da.id as apply_id,
            da.real_name as da_real_name,
            da.phone as da_phone,
            da.region as da_region,
            da.reason as da_reason,
            da.state as da_state,
            da.approve_time as da_approve_time,
            da.remark as da_remark,
            UNIX_TIMESTAMP(da.gmt_created) as da_apply_time
        FROM
            Distribute_Application da
                left join users on
                da.user_id = users.user_id
        where 1=1
        <if test="userId != null">
            and da.user_id = #{userId}
        </if>
        <if test="region != null">
            and da.region = #{region}
        </if>
        <if test="applyTimeStart != null">
            and da.gmt_created &gt;= FROM_UNIXTIME(#{applyTimeStart})
        </if>
        <if test="applyTimeEnd != null">
            and da.gmt_created &lt;= FROM_UNIXTIME(#{applyTimeEnd})
        </if>
        <if test="state != null">
            and da.state = #{state}
        </if>
        <if test="queryField != null">
            and (users.account like CONCAT('%', #{queryField}, '%')
                or users.name like CONCAT('%', #{queryField}, '%')
                or da.real_name  like CONCAT('%', #{queryField}, '%'))
        </if>
        order by da.gmt_created desc
    </select>
</mapper>
