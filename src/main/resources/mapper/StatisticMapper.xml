<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.lime.anxin.mapper.StatisticMapper">

    <resultMap id="visitorDateVo" type="cn.lime.anxin.model.bean.VisitorDateVo">
        <id property="date" column="date" jdbcType="VARCHAR"/>
        <collection property="tokens" ofType="java.lang.String">
            <result column="token" jdbcType="VARCHAR"/>
        </collection>
    </resultMap>
    <resultMap id="dateCntVo" type="cn.lime.anxin.model.vo.statistic.DateCntVo">
        <id property="date" column="date" jdbcType="VARCHAR"/>
        <result property="count" column="count" jdbcType="INTEGER"/>
    </resultMap>

    <select id="getDayVisitors" resultMap="dateCntVo">
        WITH RECURSIVE DateRange AS (
        SELECT CURDATE() - INTERVAL #{days} DAY AS call_date  -- 生成第一个日期，即 15 天前
        UNION ALL
        SELECT call_date + INTERVAL 1 DAY                -- 递归生成接下来的日期
        FROM DateRange
        WHERE call_date + INTERVAL 1 DAY &lt;= CURDATE()    -- 直到当前日期
        )
        SELECT
        d.call_date as date,                                    -- 生成的日期
        COUNT(DISTINCT user_id) AS count                      -- 如果没有记录，count 为 0
        FROM
        DateRange d
        LEFT JOIN
        System_Log sl
        ON DATE(sl.gmt_created) = d.call_date           -- 将系统日志按日期与生成的日期表连接
        GROUP BY
        d.call_date
        ORDER BY
        d.call_date ASC;
    </select>

    <select id="getDailyOrders" resultMap="dateCntVo">
        WITH RECURSIVE DateRange AS (
        SELECT CURDATE() - INTERVAL #{days} DAY AS call_date  -- 生成第一个日期，即 15 天前
        UNION ALL
        SELECT call_date + INTERVAL 1 DAY                -- 递归生成接下来的日期
        FROM DateRange
        WHERE call_date + INTERVAL 1 DAY &lt;= CURDATE()    -- 直到当前日期
        )
        SELECT
        d.call_date as date,                                    -- 生成的日期
        COUNT(o.order_id) AS count                      -- 如果没有记录，count 为 0
        FROM
        DateRange d
        LEFT JOIN
        `Order` o
        ON DATE(o.gmt_created) = d.call_date           -- 将系统日志按日期与生成的日期表连接
        GROUP BY
        d.call_date
        ORDER BY
        d.call_date ASC;

    </select>

    <select id="getDailyOrderPrices" resultMap="dateCntVo">
        WITH RECURSIVE DateRange AS (
        SELECT CURDATE() - INTERVAL #{days} DAY AS call_date  -- 生成第一个日期，即 15 天前
        UNION ALL
        SELECT call_date + INTERVAL 1 DAY                -- 递归生成接下来的日期
        FROM DateRange
        WHERE call_date + INTERVAL 1 DAY &lt;= CURDATE()    -- 直到当前日期
        )
        SELECT
        d.call_date as date,                                    -- 生成的日期
        IFNULL(sum(o.real_order_price), 0) as count
        FROM
        DateRange d
        LEFT JOIN
        `Order` o
        ON DATE(o.gmt_created) = d.call_date           -- 将系统日志按日期与生成的日期表连接
        GROUP BY
        d.call_date
        ORDER BY
        d.call_date ASC;
    </select>

    <select id="getDailyNewUsers" resultMap="dateCntVo">
        WITH RECURSIVE DateRange AS (
        SELECT CURDATE() - INTERVAL #{days} DAY AS call_date  -- 生成第一个日期，即 15 天前
        UNION ALL
        SELECT call_date + INTERVAL 1 DAY                -- 递归生成接下来的日期
        FROM DateRange
        WHERE call_date + INTERVAL 1 DAY &lt;= CURDATE()    -- 直到当前日期
        )
        SELECT
        d.call_date as date,                                    -- 生成的日期
        count(u.user_id) as count
        FROM
        DateRange d
        LEFT JOIN
        `User` u
        ON DATE(u.gmt_created) = d.call_date           -- 将系统日志按日期与生成的日期表连接
        GROUP BY
        d.call_date
        ORDER BY
        d.call_date ASC;
    </select>

</mapper>