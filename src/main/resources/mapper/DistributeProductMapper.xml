<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.lime.anxin.mapper.DistributeProductMapper">

    <resultMap id="BaseResultMap" type="cn.lime.anxin.model.entity.DistributeProduct">
            <id property="id" column="id" jdbcType="BIGINT"/>
            <result property="productId" column="product_id" jdbcType="BIGINT"/>
            <result property="skuId" column="sku_id" jdbcType="BIGINT"/>
            <result property="gmtCreated" column="gmt_created" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,product_id,sku_id,
        gmt_created
    </sql>
    <select id="pageProduct" resultType="cn.lime.anxin.model.vo.distribute.ProductWithDistributeTagPageVo">
        with sales as (SELECT p.product_id,
                              sum(oi.number) as sales
                       FROM Product p
                                left join Order_Item oi on
                           p.product_id = oi.product_id
                       GROUP by p.product_id)


        SELECT tmp.*, IF(dp.id is null, 0, 1) as is_distribute
        FROM (SELECT
        distinct t.*,
        p_url.url as productMainUrl,
        COALESCE(sales.sales, 0)
        FROM
        (
        SELECT
        p.product_id as productId,
        p.product_code as productCode,
        p.product_name as productName,
        p.reserve_str_b as productSubTitle,
        p.product_state as productState,
        p.product_type_1 as productType,
        p.reserve_str_a as productBrand,
        UNIX_TIMESTAMP(p.gmt_created) as createTime,
        p.product_sort as productSort,
        MIN(s.price) as priceRangeStart,
        MAX(s.price) as priceRangeEnd,
        p.visible as productVisible,
        SUM(s.stock) as productTotalStock,
        CASE
        WHEN COUNT(s.sku_id) > 1 THEN true
        ELSE false
        END AS multiSku,
        COALESCE(v.view_number, 0) AS productViews
        FROM
        Product p
        left join Sku s on
        p.product_id = s.product_id
        left join (
        select
        product_id ,
        COUNT(*) as view_number
        FROM
        Product_View_Log pvl
        group by
        pvl.product_id) v on
        v.product_id = p.product_id
        GROUP BY
        p.product_id) t
        left join Product_Have_Tag pht on
        t.productId = pht.product_id
        left join sales on
        sales.product_id = t.productId
        left join (
        select
        *
        FROM
        Product_Url pu
        where
        pu.url_type = 1) p_url on
        p_url.product_id = t.productId
        WHERE
        1 = 1
        <if test="productName != null">
            and t.productName like CONCAT('%', #{productName}, '%')
        </if>
        <if test="productType != null">
            and t.productType = #{productType}
        </if>
        <if test="state != null">
            and t.productState = #{state}
        </if>
        <if test="tagIds != null and tagIds.size() > 0">
            and tag_id IN
            <foreach item="tagId" index="index" collection="tagIds" open="(" separator="," close=")">
                #{tagId}
            </foreach>
        </if>
        order by t.productSort
              ) tmp
                 LEFT join Distribute_Product dp on dp.product_id = tmp.productId
            <if test="distributeState != null and distributeState == 1">
                where dp.id is not null
            </if>
            <if test="distributeState != null and distributeState == 0">
                where dp.id is null
            </if>
    </select>

</mapper>
